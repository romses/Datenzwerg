{
    "__inputs": [
      {
        "name": "DS_INFLUXDB",
        "label": "InfluxDB",
        "description": "",
        "type": "datasource",
        "pluginId": "influxdb",
        "pluginName": "InfluxDB"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "panel",
        "id": "alertlist",
        "name": "Alert list",
        "version": ""
      },
      {
        "type": "panel",
        "id": "bargauge",
        "name": "Bar gauge",
        "version": ""
      },
      {
        "type": "panel",
        "id": "gauge",
        "name": "Gauge",
        "version": ""
      },
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "10.2.2"
      },
      {
        "type": "datasource",
        "id": "influxdb",
        "name": "InfluxDB",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "table",
        "name": "Table",
        "version": ""
      },
      {
        "type": "panel",
        "id": "timeseries",
        "name": "Time series",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "max": 1000,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "#EAB839",
                  "value": 600
                },
                {
                  "color": "red",
                  "value": 900
                }
              ]
            },
            "unit": "s"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 14,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 5,
        "options": {
          "displayMode": "lcd",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "valueMode": "color"
        },
        "pluginVersion": "10.2.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "query": "import \"strings\"\n\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"wifi_signal\")\n  |> group(columns: [\"device\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))\n  |> map(fn: (r) => ({r with _value: int(v: uint(v: now()) - uint(v: r._time)) / 1000000000}))\n  |> map(fn: (r) => ({r with _value: if r._value < 0 then 0 else r._value}))\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "Last WiFi signal report",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "If this is red but WiFi is green, the I2C bus might have crashed on the gnome.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "max": 1000,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "#EAB839",
                  "value": 600
                },
                {
                  "color": "red",
                  "value": 900
                }
              ]
            },
            "unit": "s"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 14,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 9,
        "options": {
          "displayMode": "lcd",
          "minVizHeight": 10,
          "minVizWidth": 0,
          "namePlacement": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "valueMode": "color"
        },
        "pluginVersion": "10.2.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "query": "import \"strings\"\n\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"temperature\")\n  |> group(columns: [\"device\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))\n  |> map(fn: (r) => ({r with _value: int(v: uint(v: now()) - uint(v: r._time)) / 1000000000}))\n  |> map(fn: (r) => ({r with _value: if r._value < 0 then 0 else r._value}))\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "Last Temperature report (requires I2C)",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 14
        },
        "id": 3,
        "options": {
          "alertInstanceLabelFilter": "",
          "alertName": "",
          "dashboardAlerts": true,
          "folder": {
            "title": "Datenzwerg Alerts",
            "uid": "d0a4c00e-7be4-4981-ace5-f74b034bffcb"
          },
          "groupBy": [
            "device"
          ],
          "groupMode": "custom",
          "maxItems": 20,
          "sortOrder": 1,
          "stateFilter": {
            "error": true,
            "firing": true,
            "noData": true,
            "normal": false,
            "pending": true
          },
          "viewMode": "list"
        },
        "title": "Current alerts",
        "type": "alertlist"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 25
        },
        "id": 8,
        "panels": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "description": "This requires everything to function, incl. I2C",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "max": 1000,
                "min": 0,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "#EAB839",
                      "value": 600
                    },
                    {
                      "color": "red",
                      "value": 900
                    }
                  ]
                },
                "unit": "s"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 13,
              "w": 12,
              "x": 0,
              "y": 26
            },
            "id": 2,
            "options": {
              "displayMode": "lcd",
              "minVizHeight": 10,
              "minVizWidth": 0,
              "namePlacement": "auto",
              "orientation": "horizontal",
              "reduceOptions": {
                "calcs": [
                  "lastNotNull"
                ],
                "fields": "",
                "values": false
              },
              "showUnfilled": true,
              "valueMode": "color"
            },
            "pluginVersion": "10.2.2",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB}"
                },
                "query": "import \"strings\"\n\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"battery_voltage\")\n  |> group(columns: [\"device\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))\n  |> map(fn: (r) => ({r with _value: int(v: uint(v: now()) - uint(v: r._time)) / 1000000000}))\n  |> map(fn: (r) => ({r with _value: if r._value < 0 then 0 else r._value}))\n  |> last()\n",
                "refId": "A"
              }
            ],
            "title": "Last battery voltage report",
            "type": "bargauge"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "max": 4.1,
                "min": 3,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    },
                    {
                      "color": "#EAB839",
                      "value": 3.3
                    },
                    {
                      "color": "green",
                      "value": 3.5
                    }
                  ]
                },
                "unit": "volt"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 13,
              "w": 12,
              "x": 12,
              "y": 26
            },
            "id": 1,
            "options": {
              "minVizHeight": 75,
              "minVizWidth": 75,
              "orientation": "auto",
              "reduceOptions": {
                "calcs": [
                  "lastNotNull"
                ],
                "fields": "",
                "values": false
              },
              "showThresholdLabels": false,
              "showThresholdMarkers": true
            },
            "pluginVersion": "10.2.2",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB}"
                },
                "query": "import \"strings\"\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"battery_level\" or r._measurement == \"battery_voltage\")\n  |> group(columns: [\"device\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))",
                "refId": "A"
              }
            ],
            "title": "Battery voltage",
            "type": "gauge"
          }
        ],
        "title": "Battery overview",
        "type": "row"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 26
        },
        "id": 4,
        "panels": [],
        "title": "Debugging",
        "type": "row"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 12,
          "x": 0,
          "y": 27
        },
        "id": 6,
        "options": {
          "legend": {
            "calcs": [
              "lastNotNull",
              "min",
              "max",
              "mean"
            ],
            "displayMode": "table",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "query": "import \"strings\"\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"datenzwerg___wifi_signal\" or r._measurement == \"wifi_signal\")\n  |> group(columns: [\"device\"])\n  |> aggregateWindow(every: 60m, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))",
            "refId": "A"
          }
        ],
        "title": "WiFi Signal",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 16,
          "w": 12,
          "x": 12,
          "y": 27
        },
        "id": 7,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "enablePagination": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 1,
          "showHeader": true
        },
        "pluginVersion": "10.2.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "query": "import \"strings\"\n\nfrom(bucket: \"datagnome-raw\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"esphome_version\" or r[\"_measurement\"] == \"git_ref\")\n  |> group(columns: [\"device\"])\n  |> pivot(rowKey: [\"_measurement\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> group()\n  |> pivot(rowKey: [\"device\"], columnKey: [\"_measurement\"], valueColumn: \"value\")\n  |> map(fn: (r) => ({r with device: strings.title(v: r.device)}))\n",
            "refId": "A"
          }
        ],
        "title": "Versions",
        "type": "table"
      }
    ],
    "refresh": "5s",
    "schemaVersion": 38,
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Healthchecks",
    "uid": "a5cb5f8d-b6ce-47c4-a414-69c74e41e388",
    "version": 23,
    "weekStart": ""
  }